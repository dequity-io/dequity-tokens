.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 32
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 59
ACCEPT
.loc ../contracts/StakerUpgradeTest.tsol, 60
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 62
ROLL 3
SETGLOB 12
.loc ../contracts/StakerUpgradeTest.tsol, 63
PUSH S2
SETGLOB 13
.loc ../contracts/StakerUpgradeTest.tsol, 64
SWAP
SETGLOB 14
.loc ../contracts/StakerUpgradeTest.tsol, 65
SETGLOB 15
.loc ../contracts/StakerUpgradeTest.tsol, 67
PUSHINT 300000000
MYADDR
ROT
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1
STUR 111
ROTREV
PUSHSLICE x31edd4c73f5a0dbc
NEWC
STSLICE
STSLICE
STU 128
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onGetAddress
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 77
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $onGetAddress_e4ed19af_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onGetAddress_e4ed19af_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 78
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 79
GETGLOB 9
GETGLOB 13
SDEQ
PUSHCONT {
	.loc ../contracts/StakerUpgradeTest.tsol, 80
	DUP
	SETGLOB 16
	.loc ../contracts/StakerUpgradeTest.tsol, 0
}
IF
.loc ../contracts/StakerUpgradeTest.tsol, 82
DROP
GETGLOB 12
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro getUpgraded
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 89
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $getUpgraded_812e20dd_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2389074235
	STUR 130
	STU 256
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 256
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getUpgraded_812e20dd_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 91
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 23
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro onAcceptTokensTransfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 94
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $onAcceptTokensTransfer_e63f2284_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensTransfer_e63f2284_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 102
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 103
BLKDROP2 1, 5
.loc ../contracts/StakerUpgradeTest.tsol, 104
BLKDROP2 1, 2
.loc ../contracts/StakerUpgradeTest.tsol, 105
DEPTH
ADDCONST -2
PICK
PUSHINT 1000000000
GEQ
GETGLOB 9
GETGLOB 16
SDEQ
PUSH S5
GETGLOB 14
GEQ
AND
AND
PUSHCONT {
	.loc ../contracts/StakerUpgradeTest.tsol, 106
	PUSH S2
	GETGLOB 19
	PUSHINT 267
	DICTGET
	NULLSWAPIFNOT
	NIP
	PUSHCONT {
		.loc ../contracts/StakerUpgradeTest.tsol, 107
		PUSH S2
		GETGLOB 19
		PUSHINT 267
		DICTGET
		ZEROSWAPIFNOT
		PUSHCONT {
			PLDU 128
		}
		IF
		.loc ../contracts/StakerUpgradeTest.tsol, 108
		PUSH S4
		ADD
		UFITS 128
		PUSH S3
		GETGLOB 19
		ROT
	}
	PUSHCONT {
		.loc ../contracts/StakerUpgradeTest.tsol, 111
		PUSH S2
		GETGLOB 19
		PUSH S5
	}
	IFELSE
	NEWC
	STU 128
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 19
	.loc ../contracts/StakerUpgradeTest.tsol, 113
	GETGLOB 17
	PUSH S4
	ADD
	SETGLOB 17
	.loc ../contracts/StakerUpgradeTest.tsol, 114
	GETGLOB 11
	PUSH S4
	NOW
	PUSH S5
	PUSHSLICE xc0000000000000000000000001
	NEWC
	STSLICE
	ROLLREV 4
	NEWC
	STSLICECONST x481b27a5
	STSLICE
	STU 256
	STU 128
	STU 16
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/StakerUpgradeTest.tsol, 115
	PUSH S2
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	ADDCONST 2
	UFITS 8
}
PUSHCONT {
	.loc ../contracts/StakerUpgradeTest.tsol, 122
	DUP
	TRUE
	PUSH S3
	PUSHINT 0
	PUSH2 S6, S7
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 6
	NEWC
	STSLICECONST x73e22143
	STU 128
	STSLICE
	STU 128
	ROLLREV 3
	NEWC
	STSLICE
	STI 1
	STREF
	STBREFR
	STBREFR
	ENDC
	PUSHPOW2 7
}
IFELSE
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0
BLKDROP 4

.macro startUnlock
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 133
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $startUnlock_11f66f84_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	startUnlock_11f66f84_internal
.type	startUnlock_11f66f84_internal, @function
CALL $startUnlock_11f66f84_internal_macro$

.macro startUnlock_11f66f84_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 134
DUP
GETGLOB 9
GETGLOB 19
PUSHINT 267
DICTGET
ZEROSWAPIFNOT
PUSHCONT {
	PLDU 128
}
IF
LEQ
THROWIFNOT 1090
.loc ../contracts/StakerUpgradeTest.tsol, 135
DEPTH
ADDCONST -2
PICK
PUSHINT 500000000
GEQ
THROWIFNOT 1060
.loc ../contracts/StakerUpgradeTest.tsol, 136
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 137
NOW
GETGLOB 22
ADD
.loc ../contracts/StakerUpgradeTest.tsol, 138
GETGLOB 9
GETGLOB 21
DUP2
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSH S4
NOW
PUSH S5
TRIPLE
CALLREF {
	UNTRIPLE
	XCHG S2
	NEWC
	STU 128
	STU 256
	STU 256
}
PUSH S4
ROT
PUSHPOW2 8
DICTUADDB
DROP
NEWC
STDICT
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 21
.loc ../contracts/StakerUpgradeTest.tsol, 146
GETGLOB 18
PUSH S2
ADD
SETGLOB 18
.loc ../contracts/StakerUpgradeTest.tsol, 147
GETGLOB 9
GETGLOB 19
PUSHINT 267
DICTGET
ZEROSWAPIFNOT
PUSHCONT {
	PLDU 128
}
IF
.loc ../contracts/StakerUpgradeTest.tsol, 148
PUSH2 S0, S2
EQUAL
PUSHCONT {
	.loc ../contracts/StakerUpgradeTest.tsol, 149
	GETGLOB 9
	GETGLOB 19
	PUSHINT 267
	DICTDEL
	DROP
}
PUSHCONT {
	.loc ../contracts/StakerUpgradeTest.tsol, 151
	PUSH2 S0, S2
	SUB
	UFITS 128
	GETGLOB 9
	GETGLOB 19
	ROT
	NEWC
	STU 128
	ROTREV
	PUSHINT 267
	DICTSETB
}
IFELSE
SETGLOB 19
.loc ../contracts/StakerUpgradeTest.tsol, 153
DROP
GETGLOB 11
ROTREV
NOW
GETGLOB 9
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROLLREV 5
NEWC
STSLICECONST x757b8870
STSLICE
STU 256
ROLLREV 3
NEWC
STU 256
STU 128
STU 16
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 154
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro withdraw
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 161
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $withdraw_2e1a7d4d_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro withdraw_2e1a7d4d_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 162
NOW
OVER
GEQ
THROWIFNOT 1063
.loc ../contracts/StakerUpgradeTest.tsol, 163
GETGLOB 9
GETGLOB 21
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
THROWIFNOT 1060
.loc ../contracts/StakerUpgradeTest.tsol, 164
DUP
GETGLOB 9
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
NIP
THROWIFNOT 1061
.loc ../contracts/StakerUpgradeTest.tsol, 165
DEPTH
ADDCONST -2
PICK
PUSHINT 2000000000
GEQ
THROWIFNOT 1050
.loc ../contracts/StakerUpgradeTest.tsol, 167
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 168
DUP
GETGLOB 9
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSHPOW2 8
DICTUGET
IFREFELSEREF
{
	LDU 128
	LDU 256
	LDU 256
	ENDS
	TRIPLE
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	TRIPLE
}
UNTRIPLE
DROP2
.loc ../contracts/StakerUpgradeTest.tsol, 169
GETGLOB 17
OVER
GEQ
THROWIFNOT 1091
.loc ../contracts/StakerUpgradeTest.tsol, 170
GETGLOB 18
OVER
GEQ
THROWIFNOT 1092
.loc ../contracts/StakerUpgradeTest.tsol, 172
GETGLOB 9
GETGLOB 21
DUP2
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
ROLL 4
SWAP
PUSHPOW2 8
DICTUDEL
DROP
NEWC
STDICT
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 21
.loc ../contracts/StakerUpgradeTest.tsol, 173
GETGLOB 9
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DICTEMPTY
PUSHCONT {
	.loc ../contracts/StakerUpgradeTest.tsol, 173
	GETGLOB 9
	GETGLOB 21
	PUSHINT 267
	DICTDEL
	DROP
	SETGLOB 21
	.loc ../contracts/StakerUpgradeTest.tsol, 0
}
IF
.loc ../contracts/StakerUpgradeTest.tsol, 175
GETGLOB 17
OVER
SUB
UFITS 256
SETGLOB 17
.loc ../contracts/StakerUpgradeTest.tsol, 176
GETGLOB 18
OVER
SUB
UFITS 256
SETGLOB 18
.loc ../contracts/StakerUpgradeTest.tsol, 178
GETGLOB 11
OVER
NOW
GETGLOB 9
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROLLREV 4
NEWC
STSLICECONST x3505e0b1
STSLICE
STU 256
STU 128
STU 16
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 180
PUSHREF {
}
.loc ../contracts/StakerUpgradeTest.tsol, 181
TRUE
GETGLOB 9
PUSHINT 0
GETGLOB 9
ROLL 5
GETGLOB 16
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 6
NEWC
STSLICECONST x73e22143
STU 128
STSLICE
STU 128
ROLLREV 3
NEWC
STSLICE
STI 1
STREF
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro getLockedAmount
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 191
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $getLockedAmount_929ec537_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2672899351
	STUR 130
	STU 128
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 128
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getLockedAmount_929ec537_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 192
DUP
GETGLOB 19
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
THROWIFNOT 1062
.loc ../contracts/StakerUpgradeTest.tsol, 194
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 19
PUSHINT 267
DICTGET
ZEROSWAPIFNOT
PUSHCONT {
	PLDU 128
}
IF
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro isReadyAnyWithdraw
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 197
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $isReadyAnyWithdraw_63b99bbd_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 4117864012
	STUR 130
	STI 1
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STI 1
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro isReadyAnyWithdraw_63b99bbd_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 198
DUP
GETGLOB 21
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
THROWIFNOT 1060
.loc ../contracts/StakerUpgradeTest.tsol, 199
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 128
	LDU 256
	LDU 256
	ENDS
	TRIPLE
	PAIR
}
.loc ../contracts/StakerUpgradeTest.tsol, 200
DUP
ISNULL
THROWIF 63
UNPAIR
DROP
.loc ../contracts/StakerUpgradeTest.tsol, 202
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
NOW
SWAP
GEQ
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro getClosestUnlock
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 205
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $getClosestUnlock_43628eb0_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x88a23f1e
	SWAP
	UNTRIPLE
	REVERSE 4, 0
	STU 128
	STU 256
	STU 256
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	SWAP
	UNTRIPLE
	REVERSE 4, 0
	STU 128
	STU 256
	STU 256
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getClosestUnlock_43628eb0_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 206
DUP
GETGLOB 21
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
THROWIFNOT 1060
.loc ../contracts/StakerUpgradeTest.tsol, 207
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 128
	LDU 256
	LDU 256
	ENDS
	TRIPLE
	PAIR
}
.loc ../contracts/StakerUpgradeTest.tsol, 208
DUP
ISNULL
THROWIF 63
UNPAIR
NIP
.loc ../contracts/StakerUpgradeTest.tsol, 210
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro getRegData
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 213
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $getRegData_6193e40d_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 4003858737
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STDICT
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getRegData_6193e40d_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 214
DUP
GETGLOB 21
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
THROWIFNOT 1060
.loc ../contracts/StakerUpgradeTest.tsol, 216
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro setOwner
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 219
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $setOwner_13af4035_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setOwner_13af4035_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 49
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
THROWIFNOT 1021
.loc ../contracts/StakerUpgradeTest.tsol, 220
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 221
GETGLOB 12
.loc ../contracts/StakerUpgradeTest.tsol, 222
OVER
SETGLOB 12
.loc ../contracts/StakerUpgradeTest.tsol, 223
TUCK
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROTREV
NEWC
STSLICECONST x47007a11
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 224
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro setMinStake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 231
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $setMinStake_2d782e76_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setMinStake_2d782e76_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 49
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
THROWIFNOT 1021
.loc ../contracts/StakerUpgradeTest.tsol, 232
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 233
SETGLOB 14
.loc ../contracts/StakerUpgradeTest.tsol, 234
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro setLPToken
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 241
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $setLPToken_190cb2bb_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setLPToken_190cb2bb_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 49
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
THROWIFNOT 1021
.loc ../contracts/StakerUpgradeTest.tsol, 242
OVER
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
DUP
PUSHCONT {
	DROP
	DUP
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
}
IF
THROWIFNOT 1023
.loc ../contracts/StakerUpgradeTest.tsol, 243
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 244
SWAP
SETGLOB 13
.loc ../contracts/StakerUpgradeTest.tsol, 245
SETGLOB 16
.loc ../contracts/StakerUpgradeTest.tsol, 246
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro setLockTime
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 253
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $setLockTime_ae04d45d_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setLockTime_ae04d45d_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 49
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
THROWIFNOT 1021
.loc ../contracts/StakerUpgradeTest.tsol, 254
DUP
GETGLOB 22
LEQ
THROWIFNOT 1100
.loc ../contracts/StakerUpgradeTest.tsol, 255
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 256
SETGLOB 22
.loc ../contracts/StakerUpgradeTest.tsol, 257
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0

.globl	_targetBalance_81a00f03_internal
.type	_targetBalance_81a00f03_internal, @function
CALL $_targetBalance_81a00f03_internal_macro$

.macro _targetBalance_81a00f03_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 265
PUSHINT 1000000000
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro sendMessage
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 268
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $sendMessage_d338f0d9_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro sendMessage_d338f0d9_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 49
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
THROWIFNOT 1021
.loc ../contracts/StakerUpgradeTest.tsol, 272
CALLREF {
	CALL $_targetBalance_81a00f03_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/StakerUpgradeTest.tsol, 273
SWAP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1
STUR 111
STREF
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/StakerUpgradeTest.tsol, 0

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpgradeTest.tsol, 280
LDREF
ENDS
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $upgrade_7916ae0d_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro upgrade_7916ae0d_internal_macro
.loc ../contracts/StakerUpgradeTest.tsol, 49
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
THROWIFNOT 1021
.loc ../contracts/StakerUpgradeTest.tsol, 281
GETGLOB 19
NEWC
STDICT
ENDC
.loc ../contracts/StakerUpgradeTest.tsol, 282
GETGLOB 21
NEWC
STDICT
ENDC
.loc ../contracts/StakerUpgradeTest.tsol, 283
GETGLOB 16
GETGLOB 13
GETGLOB 12
NEWC
STSLICE
ROTREV
NEWC
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
.loc ../contracts/StakerUpgradeTest.tsol, 288
GETGLOB 18
GETGLOB 17
GETGLOB 10
GETGLOB 14
GETGLOB 15
GETGLOB 11
NEWC
STU 16
STU 32
STU 128
STU 256
STU 256
STU 256
GETGLOB 22
NEWC
STU 256
STBREFR
ENDC
.loc ../contracts/StakerUpgradeTest.tsol, 299
ROLL 3
NEWC
STREF
.loc ../contracts/StakerUpgradeTest.tsol, 300
ROLL 3
SWAP
STREF
.loc ../contracts/StakerUpgradeTest.tsol, 301
XCHG S1, S2
STREF
.loc ../contracts/StakerUpgradeTest.tsol, 302
STREF
.loc ../contracts/StakerUpgradeTest.tsol, 303
ENDC
.loc ../contracts/StakerUpgradeTest.tsol, 305
OVER
SETCODE
.loc ../contracts/StakerUpgradeTest.tsol, 306
SWAP
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc ../contracts/StakerUpgradeTest.tsol, 307
CALLREF {
	CALL $:onCodeUpgrade$
}
.loc ../contracts/StakerUpgradeTest.tsol, 0

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc ../contracts/StakerUpgradeTest.tsol, 311
PUSHINT 0
SETGLOB 10
PUSHINT 0
SETGLOB 11
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 12
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 13
PUSHINT 0
SETGLOB 14
PUSHINT 0
SETGLOB 15
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 16
PUSHINT 0
SETGLOB 17
PUSHINT 0
SETGLOB 18
NEWDICT
SETGLOB 19
PUSHINT 0
BLKPUSH 2, 0
TRIPLE
SETGLOB 20
NEWDICT
SETGLOB 21
PUSHINT 0
SETGLOB 22
PUSHINT 0
SETGLOB 23
.loc ../contracts/StakerUpgradeTest.tsol, 312
CTOS
.loc ../contracts/StakerUpgradeTest.tsol, 313
LDREF
LDREF
LDREF
PLDREF
.loc ../contracts/StakerUpgradeTest.tsol, 315
ROLL 3
CTOS
LDDICT
ENDS
SETGLOB 19
.loc ../contracts/StakerUpgradeTest.tsol, 316
ROT
CTOS
LDDICT
ENDS
SETGLOB 21
.loc ../contracts/StakerUpgradeTest.tsol, 317
SWAP
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
XCHG S2
SETGLOB 12
SETGLOB 13
SETGLOB 16
.loc ../contracts/StakerUpgradeTest.tsol, 320
CTOS
LDU 16
LDU 32
LDU 128
LDU 256
LDU 256
LDU 256
LDREF
ENDS
CTOS
LDU 256
ENDS
REVERSE 7, 0
SETGLOB 11
SETGLOB 15
SETGLOB 14
SETGLOB 10
SETGLOB 17
SETGLOB 18
SETGLOB 22
.loc ../contracts/StakerUpgradeTest.tsol, 337
GETGLOB 15
INC
UFITS 32
SETGLOB 15
.loc ../contracts/StakerUpgradeTest.tsol, 338
PUSHINT 123456
SETGLOB 23
.loc ../contracts/StakerUpgradeTest.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 256
LDU 16
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
LDU 256
LDREF
ENDS
CTOS
LDU 256
LDDICT
LDU 128
LDU 256
LDU 256
ROLLREV 3
TRIPLE
SWAP
LDDICT
LDREF
ENDS
CTOS
LDU 256
LDU 256
ENDS
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 256
	}
	IF
	PUSHINT 2
	PUSH S2
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 16
	}
	IF
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	DUP
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TRIPLE
	NEWDICT
	PUSHINT 0
	DUP
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0
	SETGLOB 17
	PUSHINT 0
	SETGLOB 18
	PUSHINT 40
	SETGLOB 22
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 23
GETGLOB 22
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 256
STU 16
ROLLREV 12
NEWC
STSLICE
ROLLREV 11
NEWC
STSLICE
STU 128
STU 32
ROLLREV 8
NEWC
STSLICE
STU 256
ROLLREV 6
NEWC
STU 256
STDICT
SWAP
UNTRIPLE
REVERSE 4, 0
STU 128
STU 256
STU 256
STDICT
ROTREV
NEWC
STU 256
STU 256
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro owner_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000008c0c3cfd
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro LPTokenRoot_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000e73b623e
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro minimalStake_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000c1e5d4cf
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro stakerVersion_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ce6898a6
	NEWC
	STSLICE
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro LPTokenWallet_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ffd420a0
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro TVL
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ba97e469
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro amountWaitingUnlock
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 18
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d26aa0cb
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro stakedByOwner
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 19
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000008e4e6ecb
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro reg
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 21
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000cb89bb50
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro lockTime_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 22
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000aac692a2
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 1280860181
LEQ
IFJMPREF {
	DUP
	PUSHINT 241590587
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 144850718
		EQUAL
		IFJMPREF {
			CALL $getClosestUnlock$
		}
		DUP
		PUSHINT 202128637
		EQUAL
		IFJMPREF {
			CALL $owner_$
		}
		DUP
		PUSHINT 240021195
		EQUAL
		IFJMPREF {
			CALL $stakedByOwner$
		}
		DUP
		PUSHINT 241590587
		EQUAL
		IFJMPREF {
			CALL $getUpgraded$
		}
	}
	DUP
	PUSHINT 663198384
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 286412104
		EQUAL
		IFJMPREF {
			CALL $startUnlock$
		}
		DUP
		PUSHINT 388172858
		EQUAL
		IFJMPREF {
			CALL $upgrade$
		}
		DUP
		PUSHINT 525415703
		EQUAL
		IFJMPREF {
			CALL $getLockedAmount$
		}
		DUP
		PUSHINT 663198384
		EQUAL
		IFJMPREF {
			CALL $withdraw$
		}
	}
	DUP
	PUSHINT 983032937
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 717656738
		EQUAL
		IFJMPREF {
			CALL $lockTime_$
		}
		DUP
		PUSHINT 802052890
		EQUAL
		IFJMPREF {
			CALL $setLPToken$
		}
		DUP
		PUSHINT 877164744
		EQUAL
		IFJMPREF {
			CALL $setMinStake$
		}
		DUP
		PUSHINT 983032937
		EQUAL
		IFJMPREF {
			CALL $TVL$
		}
	}
	DUP
	PUSHINT 1280860181
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1062866364
		EQUAL
		IFJMPREF {
			CALL $onGetAddress$
		}
		DUP
		PUSHINT 1105581263
		EQUAL
		IFJMPREF {
			CALL $minimalStake_$
		}
		DUP
		PUSHINT 1267317584
		EQUAL
		IFJMPREF {
			CALL $reg$
		}
		DUP
		PUSHINT 1280860181
		EQUAL
		IFJMPREF {
			CALL $setLockTime$
		}
	}
}
DUP
PUSHINT 2144608416
LEQ
IFJMPREF {
	DUP
	PUSHINT 1731945022
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1315477670
		EQUAL
		IFJMPREF {
			CALL $stakerVersion_$
		}
		DUP
		PUSHINT 1382719691
		EQUAL
		IFJMPREF {
			CALL $amountWaitingUnlock$
		}
		DUP
		PUSHINT 1530967609
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 1731945022
		EQUAL
		IFJMPREF {
			CALL $LPTokenRoot_$
		}
	}
	DUP
	PUSHINT 1893244873
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1742659913
		EQUAL
		IFJMPREF {
			CALL $sendMessage$
		}
		DUP
		PUSHINT 1802285830
		EQUAL
		IFJMPREF {
			CALL $setOwner$
		}
		DUP
		PUSHINT 1856375089
		EQUAL
		IFJMPREF {
			CALL $getRegData$
		}
		DUP
		PUSHINT 1893244873
		EQUAL
		IFJMPREF {
			CALL $onAcceptTokensTransfer$
		}
	}
	DUP
	PUSHINT 2144608416
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1970380364
		EQUAL
		IFJMPREF {
			CALL $isReadyAnyWithdraw$
		}
		DUP
		PUSHINT 2144608416
		EQUAL
		IFJMPREF {
			CALL $LPTokenWallet_$
		}
	}
}

