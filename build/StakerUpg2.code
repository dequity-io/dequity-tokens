.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 32
ENDS
.loc ../contracts/StakerUpg2.tsol, 63
ACCEPT
.loc ../contracts/StakerUpg2.tsol, 66
ROLL 3
SETGLOB 12
.loc ../contracts/StakerUpg2.tsol, 67
ROT
SETGLOB 13
.loc ../contracts/StakerUpg2.tsol, 68
SWAP
SETGLOB 14
.loc ../contracts/StakerUpg2.tsol, 69
SETGLOB 15
.loc ../contracts/StakerUpg2.tsol, 70
PUSHSLICE x801b87fb8cbe43da12e7be75b671dcf9480149d4a5a4d140514014cd2cdd67aeb89_
SETGLOB 16
.loc ../contracts/StakerUpg2.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro getUpgraded
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpg2.tsol, 73
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/StakerUpg2.tsol, 0
CALLREF {
	CALL $getUpgraded_812e20dd_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2389074235
	STUR 130
	STU 256
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 256
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getUpgraded_812e20dd_internal_macro
.loc ../contracts/StakerUpg2.tsol, 75
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 23
.loc ../contracts/StakerUpg2.tsol, 0

.macro buildStakes
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpg2.tsol, 78
ENDS
.loc ../contracts/StakerUpg2.tsol, 0
CALLREF {
	CALL $buildStakes_5964e6c8_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3098011176
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	buildStakes_5964e6c8_internal
.type	buildStakes_5964e6c8_internal, @function
CALL $buildStakes_5964e6c8_internal_macro$

.macro buildStakes_5964e6c8_internal_macro
.loc ../contracts/StakerUpg2.tsol, 79
ACCEPT
.loc ../contracts/StakerUpg2.tsol, 81
PUSHREFSLICE {
	.blob x8003739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a203_
}
NEWDICT
PUSHINT 1
NEWC
.loc ../contracts/StakerUpg2.tsol, 82
STU 128
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 83
PUSHSLICE x8005739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a205_
SWAP
PUSHINT 2
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 84
PUSHREFSLICE {
	.blob x8007739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a207_
}
SWAP
PUSHINT 3
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 85
PUSHREFSLICE {
	.blob x8009739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a209_
}
SWAP
PUSHINT 4
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 86
PUSHSLICE x800b739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a20b_
SWAP
PUSHINT 5
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 87
PUSHSLICE x800d739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a20d_
SWAP
PUSHINT 6
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 88
PUSHSLICE x800f739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a20f_
SWAP
PUSHINT 7
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 0

.macro buildReg
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpg2.tsol, 95
ENDS
.loc ../contracts/StakerUpg2.tsol, 0
CALLREF {
	CALL $buildReg_4ce49122_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3871208845
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	buildReg_4ce49122_internal
.type	buildReg_4ce49122_internal, @function
CALL $buildReg_4ce49122_internal_macro$

.macro buildReg_4ce49122_internal_macro
.loc ../contracts/StakerUpg2.tsol, 96
ACCEPT
.loc ../contracts/StakerUpg2.tsol, 97
PUSHREFSLICE {
	.blob x8003739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a203_
}
NEWDICT
.loc ../contracts/StakerUpg2.tsol, 98
DUP2
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSHINT 11
PUSHINT 111
PUSHINT 1111
TRIPLE
CALLREF {
	UNTRIPLE
	XCHG S2
	NEWC
	STU 128
	STU 256
	STU 256
}
PUSHINT 1
ROT
PUSHPOW2 8
DICTUADDB
DROP
NEWC
STDICT
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 106
PUSHREFSLICE {
	.blob x8007739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a207_
}
TUCK
OVER
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSHINT 22
PUSHINT 222
PUSHINT 2222
TRIPLE
CALLREF {
	UNTRIPLE
	XCHG S2
	NEWC
	STU 128
	STU 256
	STU 256
}
PUSHINT 2
ROT
PUSHPOW2 8
DICTUADDB
DROP
NEWC
STDICT
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 114
PUSHREFSLICE {
	.blob x8009739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a209_
}
TUCK
OVER
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSHINT 33
PUSHINT 333
PUSHINT 3333
TRIPLE
CALLREF {
	UNTRIPLE
	XCHG S2
	NEWC
	STU 128
	STU 256
	STU 256
}
PUSHINT 3
ROT
PUSHPOW2 8
DICTUADDB
DROP
NEWC
STDICT
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 122
PUSHREFSLICE {
	.blob x8003739a81d20bda1b43eecb2cd75647cb376ca62f352db3c672e476d0705e5a203_
}
TUCK
OVER
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSHINT 44
PUSHINT 444
PUSHINT 4444
TRIPLE
CALLREF {
	UNTRIPLE
	XCHG S2
	NEWC
	STU 128
	STU 256
	STU 256
}
PUSHINT 4
ROT
PUSHPOW2 8
DICTUADDB
DROP
NEWC
STDICT
ROTREV
PUSHINT 267
DICTSETB
.loc ../contracts/StakerUpg2.tsol, 0

.macro testDecode
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpg2.tsol, 136
ENDS
.loc ../contracts/StakerUpg2.tsol, 0
CALLREF {
	CALL $testDecode_229bb61f_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2579588705
	STUR 130
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	testDecode_229bb61f_internal
.type	testDecode_229bb61f_internal, @function
CALL $testDecode_229bb61f_internal_macro$

.macro testDecode_229bb61f_internal_macro
.loc ../contracts/StakerUpg2.tsol, 137
ACCEPT
.loc ../contracts/StakerUpg2.tsol, 138
NEWDICT
.loc ../contracts/StakerUpg2.tsol, 140
CALLREF {
	CALL $buildReg_4ce49122_internal_macro$
}
.loc ../contracts/StakerUpg2.tsol, 141
CALLREF {
	CALL $buildStakes_5964e6c8_internal_macro$
}
POP S2
.loc ../contracts/StakerUpg2.tsol, 142
SWAP
NEWC
STDICT
ENDC
.loc ../contracts/StakerUpg2.tsol, 143
SWAP
NEWC
STDICT
ENDC
.loc ../contracts/StakerUpg2.tsol, 144
GETGLOB 16
GETGLOB 13
GETGLOB 12
NEWC
STSLICE
ROTREV
NEWC
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
.loc ../contracts/StakerUpg2.tsol, 149
GETGLOB 18
GETGLOB 17
GETGLOB 10
GETGLOB 14
GETGLOB 15
GETGLOB 11
NEWC
STU 16
STU 32
STU 128
STU 256
STU 256
STU 256
GETGLOB 22
NEWC
STU 256
STBREFR
ENDC
.loc ../contracts/StakerUpg2.tsol, 160
PUSH S3
NEWC
STREF
.loc ../contracts/StakerUpg2.tsol, 161
PUXC S3, S-1
STREF
.loc ../contracts/StakerUpg2.tsol, 162
PUXC S2, S-1
STREF
.loc ../contracts/StakerUpg2.tsol, 163
STREF
.loc ../contracts/StakerUpg2.tsol, 164
ENDC
.loc ../contracts/StakerUpg2.tsol, 166
CTOS
.loc ../contracts/StakerUpg2.tsol, 167
LDREF
LDREF
LDREF
PLDREF
REVERSE 4, 0
POP S6
POP S4
POP S2
.loc ../contracts/StakerUpg2.tsol, 169
ROLL 3
CTOS
LDDICT
ENDS
.loc ../contracts/StakerUpg2.tsol, 170
DROP
ROT
CTOS
LDDICT
ENDS
.loc ../contracts/StakerUpg2.tsol, 171
DROP
SWAP
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../contracts/StakerUpg2.tsol, 174
ROLL 3
CTOS
LDU 16
LDU 32
LDU 128
LDU 256
LDU 256
LDU 256
LDREF
ENDS
CTOS
LDU 256
ENDS
.loc ../contracts/StakerUpg2.tsol, 191
REVERSE 7, 0
PUSHINT 0
NEWDICT
PUSHINT 7
PUSHCONT {
	ROT
	NEWC
	STU 256
	PUSH S2
	INC
	XCHG S3
	ROT
	PUSHINT 32
	DICTUSETB
}
REPEAT
PAIR
.loc ../contracts/StakerUpg2.tsol, 192
DROP
XCHG S2
PUSHINT 0
NEWDICT
PUSHINT 3
PUSHCONT {
	ROT
	PUSH S2
	INC
	XCHG S3
	ROT
	PUSHINT 32
	DICTUSET
}
REPEAT
PAIR
.loc ../contracts/StakerUpg2.tsol, 0

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/StakerUpg2.tsol, 197
LDREF
ENDS
.loc ../contracts/StakerUpg2.tsol, 0
CALLREF {
	CALL $upgrade_7916ae0d_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro upgrade_7916ae0d_internal_macro
.loc ../contracts/StakerUpg2.tsol, 53
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
THROWIFNOT 1021
.loc ../contracts/StakerUpg2.tsol, 199
GETGLOB 19
NEWC
STDICT
ENDC
.loc ../contracts/StakerUpg2.tsol, 200
GETGLOB 21
NEWC
STDICT
ENDC
.loc ../contracts/StakerUpg2.tsol, 201
GETGLOB 16
GETGLOB 13
GETGLOB 12
NEWC
STSLICE
ROTREV
NEWC
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
.loc ../contracts/StakerUpg2.tsol, 206
GETGLOB 18
GETGLOB 17
GETGLOB 10
GETGLOB 14
GETGLOB 15
GETGLOB 11
NEWC
STU 16
STU 32
STU 128
STU 256
STU 256
STU 256
GETGLOB 22
NEWC
STU 256
STBREFR
ENDC
.loc ../contracts/StakerUpg2.tsol, 217
ROLL 3
NEWC
STREF
.loc ../contracts/StakerUpg2.tsol, 218
ROLL 3
SWAP
STREF
.loc ../contracts/StakerUpg2.tsol, 219
XCHG S1, S2
STREF
.loc ../contracts/StakerUpg2.tsol, 220
STREF
.loc ../contracts/StakerUpg2.tsol, 221
ENDC
.loc ../contracts/StakerUpg2.tsol, 222
PUSHREF {
	.blob xc00000000000000000000000005c859de601
}
PUSHINT 0
SENDRAWMSG
.loc ../contracts/StakerUpg2.tsol, 224
OVER
SETCODE
.loc ../contracts/StakerUpg2.tsol, 225
SWAP
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc ../contracts/StakerUpg2.tsol, 226
CALLREF {
	CALL $:onCodeUpgrade$
}
.loc ../contracts/StakerUpg2.tsol, 0

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc ../contracts/StakerUpg2.tsol, 230
PUSHINT 0
SETGLOB 10
PUSHINT 0
SETGLOB 11
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 12
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 13
PUSHINT 0
SETGLOB 14
PUSHINT 0
SETGLOB 15
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 16
PUSHINT 0
SETGLOB 17
PUSHINT 0
SETGLOB 18
NEWDICT
SETGLOB 19
PUSHINT 0
BLKPUSH 2, 0
TRIPLE
SETGLOB 20
NEWDICT
SETGLOB 21
PUSHINT 0
SETGLOB 22
PUSHINT 0
SETGLOB 23
.loc ../contracts/StakerUpg2.tsol, 231
PUSHREF {
	.blob xc00000000000000000000000005c859de602
}
PUSHINT 0
SENDRAWMSG
.loc ../contracts/StakerUpg2.tsol, 232
CTOS
.loc ../contracts/StakerUpg2.tsol, 233
LDREF
LDREF
LDREF
PLDREF
.loc ../contracts/StakerUpg2.tsol, 235
ROLL 3
CTOS
LDDICT
ENDS
SETGLOB 19
.loc ../contracts/StakerUpg2.tsol, 236
ROT
CTOS
LDDICT
ENDS
SETGLOB 21
.loc ../contracts/StakerUpg2.tsol, 237
SWAP
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
XCHG S2
SETGLOB 12
SETGLOB 13
SETGLOB 16
.loc ../contracts/StakerUpg2.tsol, 240
CTOS
LDU 16
LDU 32
LDU 128
LDU 256
LDU 256
LDU 256
LDREF
ENDS
CTOS
LDU 256
ENDS
REVERSE 7, 0
SETGLOB 11
SETGLOB 15
SETGLOB 14
SETGLOB 10
SETGLOB 17
SETGLOB 18
SETGLOB 22
.loc ../contracts/StakerUpg2.tsol, 257
PUSHINT 123456
SETGLOB 23
.loc ../contracts/StakerUpg2.tsol, 258
PUSHREF {
	.blob xc00000000000000000000000005c859de603
}
PUSHINT 0
SENDRAWMSG
.loc ../contracts/StakerUpg2.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 256
LDU 16
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
LDU 256
LDREF
ENDS
CTOS
LDU 256
LDDICT
LDU 128
LDU 256
LDU 256
ROLLREV 3
TRIPLE
SWAP
LDDICT
LDREF
ENDS
CTOS
LDU 256
LDU 256
ENDS
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 256
	}
	IF
	PUSHINT 2
	PUSH S2
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 16
	}
	IF
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	DUP
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TRIPLE
	NEWDICT
	PUSHINT 0
	DUP
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0
	SETGLOB 17
	PUSHINT 0
	SETGLOB 18
	PUSHINT 40
	SETGLOB 22
	PUSHINT 123456789
	SETGLOB 23
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 23
GETGLOB 22
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 256
STU 16
ROLLREV 12
NEWC
STSLICE
ROLLREV 11
NEWC
STSLICE
STU 128
STU 32
ROLLREV 8
NEWC
STSLICE
STU 256
ROLLREV 6
NEWC
STU 256
STDICT
SWAP
UNTRIPLE
REVERSE 4, 0
STU 128
STU 256
STU 256
STDICT
ROTREV
NEWC
STU 256
STU 256
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro owner_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000008c0c3cfd
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro LPTokenRoot_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000e73b623e
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro minimalStake_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000c1e5d4cf
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro stakerVersion_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ce6898a6
	NEWC
	STSLICE
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro LPTokenWallet_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ffd420a0
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro TVL
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ba97e469
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro amountWaitingUnlock
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 18
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d26aa0cb
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro stakedByOwner
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 19
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000008e4e6ecb
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro reg
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 21
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000cb89bb50
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro lockTime_
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 22
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000aac692a2
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 388172858
LEQ
IFJMPREF {
	DUP
	PUSHINT 202128637
	EQUAL
	IFJMPREF {
		CALL $owner_$
	}
	DUP
	PUSHINT 240021195
	EQUAL
	IFJMPREF {
		CALL $stakedByOwner$
	}
	DUP
	PUSHINT 241590587
	EQUAL
	IFJMPREF {
		CALL $getUpgraded$
	}
	DUP
	PUSHINT 388172858
	EQUAL
	IFJMPREF {
		CALL $upgrade$
	}
}
DUP
PUSHINT 983032937
LEQ
IFJMPREF {
	DUP
	PUSHINT 432105057
	EQUAL
	IFJMPREF {
		CALL $testDecode$
	}
	DUP
	PUSHINT 717656738
	EQUAL
	IFJMPREF {
		CALL $lockTime_$
	}
	DUP
	PUSHINT 950527528
	EQUAL
	IFJMPREF {
		CALL $buildStakes$
	}
	DUP
	PUSHINT 983032937
	EQUAL
	IFJMPREF {
		CALL $TVL$
	}
}
DUP
PUSHINT 1382719691
LEQ
IFJMPREF {
	DUP
	PUSHINT 1105581263
	EQUAL
	IFJMPREF {
		CALL $minimalStake_$
	}
	DUP
	PUSHINT 1267317584
	EQUAL
	IFJMPREF {
		CALL $reg$
	}
	DUP
	PUSHINT 1315477670
	EQUAL
	IFJMPREF {
		CALL $stakerVersion_$
	}
	DUP
	PUSHINT 1382719691
	EQUAL
	IFJMPREF {
		CALL $amountWaitingUnlock$
	}
}
DUP
PUSHINT 2144608416
LEQ
IFJMPREF {
	DUP
	PUSHINT 1530967609
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1723725197
	EQUAL
	IFJMPREF {
		CALL $buildReg$
	}
	DUP
	PUSHINT 1731945022
	EQUAL
	IFJMPREF {
		CALL $LPTokenRoot_$
	}
	DUP
	PUSHINT 2144608416
	EQUAL
	IFJMPREF {
		CALL $LPTokenWallet_$
	}
}

